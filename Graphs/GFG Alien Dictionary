class Solution
{
    public String findOrder(String [] dict, int N, int K)
    {
        // Write your code here
        //first made graph
       ArrayList<Integer>[] graph = new ArrayList[K];
        
        for(int v = 0; v < K; v++){
            graph[v] = new ArrayList<>();
        }
        for(int i = 0; i < dict.length - 1; i++){
            
            String w1 = dict[i];
            String w2 = dict[i + 1];
            
            
         for(int j = 0; j < Math.min(w1.length(), w2.length()); j++){
            char ch1 = w1.charAt(j);
            char ch2 = w2.charAt(j);
            
            if(ch1 != ch2){
                graph[ch1 - 'a'].add(ch2 - 'a');
                break;
            }
         }
            
            
        }
       boolean[] vis = new boolean[K];
       
       Stack<Integer> st = new Stack<>();
       
       for(int v = 0; v < K; v++){
           if(!vis[v]){
               tsort(graph, vis, st, v);
           }
       }
       String ans = "";
       while(st.size() > 0){
           char ch = (char)(st.pop() + 'a');
           ans += ch;
       }
       return ans;
    }
        public void tsort(ArrayList<Integer>[] graph, boolean[] vis, Stack<Integer> st, int v){
            vis[v] = true;
            for(int n : graph[v]){
                if(!vis[n]){
                    tsort(graph, vis, st, n);
                }
            }
            st.push(v);
        }
        
    }

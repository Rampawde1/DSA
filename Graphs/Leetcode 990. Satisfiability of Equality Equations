class Solution {
    public boolean equationsPossible(String[] equations) {
        parent = new int[26];
        rank = new int[26];
        
        for(int i = 0; i < parent.length; i++){
            parent[i] = i;
            rank[i] = 0;
        }
        for(String equation : equations){
            if(equation.charAt(1) == '='){
                
            int op1 = equation.charAt(0) - 'a';  // a == b
            int op2 = equation.charAt(3) - 'a';  // 1 23 4
                
                int l1 = find(op1);
                int l2 = find(op2);
            if(l1 != l2){
                union(l1, l2);
            }
        }
    }
   for(String equation : equations){
            if(equation.charAt(1) == '!'){
                
            int op1 = equation.charAt(0) - 'a';  // a == b
            int op2 = equation.charAt(3) - 'a';  // 1 23 4
                
                int l1 = find(op1);
                int l2 = find(op2);
                
            if(l1 == l2){
                return false;
            }
        }
    }
        return true;
}
    int[] rank;
    int[] parent;
    
    int find(int x){
        if(parent[x] == x){
            return parent[x];
        } else{
            parent[x] = find(parent[x]);
            return parent[x];
        }
    }
    void union(int x, int y){
        if(rank[x] < rank[y]){
            parent[x] = y;
        } else if(rank[y] < rank[x]){
            parent[y] = x;
        } else{
            parent[y] = x;
            rank[x]++;
        }
    }
}
